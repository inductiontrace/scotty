# Variant A: Stage-1 (no embeddings, emit all YOLOE labels)
edge:
  cam_id: "pi5_cam_a"
  fps: 5.0
  source: "picam"
  emit_jsonl: "data/stage1_tracks.jsonl"

output:
  video_path: "data/stage1_overlay.mp4"  # set null/empty to disable
  fps: 5                                   # target container fps (≈ loop rate)
  codec: "mp4v"                           # try "avc1" or "H264" if installed
  draw_scores: true                        # include conf score in overlay
  draw_hud: true                           # show diagnostics overlay
  hud_corner: "tl"                        # tl|tr|bl|br placement
  hud_scale: 0.6                           # text scale factor
  hud_opacity: 0.6                         # background box opacity

quiddity:
  impl: "quiddity.yoloe_pt:YOLOEPT"
  model_name: "yolov8s"
  conf_th: 0.35
  min_box_area_frac: 0.002
  max_box_area_frac: 0.85
  # classes_include: ["person"]  # leave unset to emit all labels
  dedup:
    enabled: true
    iou_thr: 0.6

tracker:
  impl: "tracker.db_tracker:DBTracker"
  max_age: 10
  min_hits: 2
  center_gate_frac: 0.25
  maha_gate_p: 0.995
  w_center: 1.0
  w_scale: 0.2
  w_aspect: 0.2
  w_app: 0.0
  q_pos: 1.0
  q_sz: 2.0
  r_pos: 3.0
  r_sz: 8.0
  merge_dups:
    enabled: true
    iou_thr: 0.8
    hold: 2

haecceity:
  embed_classes: []  # disable embeddings
  specialists: []
  fallbacks: []

# Variant B: Enable person embeddings via torchreid (no ONNX needed)
# (Uncomment this block instead of Variant A)
# haecceity:
#   embed_classes: ["person"]
#   new_id_threshold: 0.55
#   hysteresis: 0.05
#   embed_interval_frames: 3
#   specialists:
#     - impl: "haecceity.person_torchreid:PersonTorchreid"
#       model_name: "osnet_x0_25"
#       crop: 192
#       min_bbox_h_frac: 0.08
#       min_sharpness: 25.0
#   fallbacks: []
# ---
#
# Notes
# - **Fail-soft behavior** applies to both specialists and fallbacks; missing `model_path` ⇒ log `WARNING` and continue.
# - **torchreid path** keeps Stage-1 simple: no ONNX files required. You can switch to an ONNX OSNet later by adding that specialist with a valid `model_path` — the loader will prefer whatever matches `embed_classes` and exists on disk.
# - Everything else in your pipeline remains unchanged.
